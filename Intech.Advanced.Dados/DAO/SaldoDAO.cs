#region Usings
using Dapper;
using Intech.Lib.Dapper;
using Intech.Lib.Web;
using Intech.Advanced.Entidades;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
#endregion

namespace Intech.Advanced.Dados.DAO
{   
    public abstract class SaldoDAO : BaseDAO<SaldoEntidade>
    {
        
		public virtual SaldoEntidade BuscarAutopatrocinioPorReferenciaAnterior(DateTime DT_REFERENCIA, int SQ_PLANO_PREVIDENCIAL, int SQ_CONTRATO_TRABALHO)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER JOIN  FI_TIPO_COBRANCA ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA  WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA <= @DT_REFERENCIA)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO = 3)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL)   AND (FI_TIPO_COBRANCA.EE_AUTOPATROCINIO = 'S')", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_TIPO_COBRANCA  ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA<=:DT_REFERENCIA) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO=3) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL) AND (FI_TIPO_COBRANCA.EE_AUTOPATROCINIO='S')", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO });
			else
				throw new Exception("Provider não suportado!");
		}
		public virtual SaldoEntidade BuscarAutopatrocinioPorReferenciaApos(DateTime DT_REFERENCIA, int SQ_PLANO_PREVIDENCIAL, int SQ_CONTRATO_TRABALHO)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER JOIN  FI_TIPO_COBRANCA ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA  WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA BETWEEN @DT_REFERENCIA AND GETDATE())    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO = 3)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL)   AND (FI_TIPO_COBRANCA.EE_AUTOPATROCINIO = 'S')", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_TIPO_COBRANCA  ON FI_TIPO_COBRANCA.SQ_TIPO_COBRANCA=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_COBRANCA WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA BETWEEN :DT_REFERENCIA AND SYSDATE) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO=3) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL) AND (FI_TIPO_COBRANCA.EE_AUTOPATROCINIO='S')", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO });
			else
				throw new Exception("Provider não suportado!");
		}
		public virtual IEnumerable<SaldoEntidade> BuscarBrutoPorPlanoReferenciaPessoa(DateTime DT_REFERENCIA, int SQ_PLANO_PREVIDENCIAL, int CD_PESSOA)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.Query<SaldoEntidade>("SELECT FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO,         FI_REGRA_RESGATE_INTERVALO.VL_RESGATE   FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER JOIN FI_CONTRATO_TRABALHO ON FI_CONTRATO_TRABALHO.SQ_CONTRATO_TRABALHO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO INNER JOIN FI_FUNDO_CONTRIBUICAO ON (FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO)                                  AND (FI_FUNDO_CONTRIBUICAO.SQ_PLANO_PREVIDENCIAL = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL) INNER JOIN FI_REGRA_RESGATE ON FI_REGRA_RESGATE.SQ_REGRA_RESGATE = FI_FUNDO_CONTRIBUICAO.SQ_REGRA_RESGATE INNER JOIN FI_REGRA_RESGATE_INTERVALO ON FI_REGRA_RESGATE_INTERVALO.SQ_REGRA_RESGATE = FI_FUNDO_CONTRIBUICAO.SQ_REGRA_RESGATE WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA <= @DT_REFERENCIA)    AND (FI_FUNDO_CONTRIBUICAO.EE_SALDO_EXTRATO = 'S')    AND (FI_FUNDO_CONTRIBUICAO.IR_COLUNA = 'E')    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL)    AND (FI_CONTRATO_TRABALHO.CD_PESSOA = @CD_PESSOA)    AND (30 BETWEEN FI_REGRA_RESGATE_INTERVALO.QT_TEMPO_MINIMO AND FI_REGRA_RESGATE_INTERVALO.QT_TEMPO_MAXIMO)", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, CD_PESSOA });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.Query<SaldoEntidade>("SELECT FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO, FI_REGRA_RESGATE_INTERVALO.VL_RESGATE FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_CONTRATO_TRABALHO  ON FI_CONTRATO_TRABALHO.SQ_CONTRATO_TRABALHO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO INNER  JOIN FI_FUNDO_CONTRIBUICAO  ON (FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO) AND (FI_FUNDO_CONTRIBUICAO.SQ_PLANO_PREVIDENCIAL=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL) INNER  JOIN FI_REGRA_RESGATE  ON FI_REGRA_RESGATE.SQ_REGRA_RESGATE=FI_FUNDO_CONTRIBUICAO.SQ_REGRA_RESGATE INNER  JOIN FI_REGRA_RESGATE_INTERVALO  ON FI_REGRA_RESGATE_INTERVALO.SQ_REGRA_RESGATE=FI_FUNDO_CONTRIBUICAO.SQ_REGRA_RESGATE WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA<=:DT_REFERENCIA) AND (FI_FUNDO_CONTRIBUICAO.EE_SALDO_EXTRATO='S') AND (FI_FUNDO_CONTRIBUICAO.IR_COLUNA='E') AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL) AND (FI_CONTRATO_TRABALHO.CD_PESSOA=:CD_PESSOA) AND (30 BETWEEN FI_REGRA_RESGATE_INTERVALO.QT_TEMPO_MINIMO AND FI_REGRA_RESGATE_INTERVALO.QT_TEMPO_MAXIMO)", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, CD_PESSOA });
			else
				throw new Exception("Provider não suportado!");
		}
		public virtual SaldoEntidade BuscarIndividualPorPlanoDataReferenciaPessoa(DateTime DT_REFERENCIA, int SQ_PLANO_PREVIDENCIAL, int CD_PESSOA, string IR_TIPO)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT   SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO,   SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.VL_CONTRIBUICAO) AS VL_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER JOIN FI_CONTRATO_TRABALHO ON FI_CONTRATO_TRABALHO.SQ_CONTRATO_TRABALHO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO INNER JOIN FI_FUNDO_CONTRIBUICAO ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO = FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA <= @DT_REFERENCIA)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL)    AND (FI_FUNDO_CONTRIBUICAO.IR_COLUNA = @IR_TIPO)    AND (FI_CONTRATO_TRABALHO.CD_PESSOA = @CD_PESSOA)", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, CD_PESSOA, IR_TIPO });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO, SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.VL_CONTRIBUICAO) AS VL_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL INNER  JOIN FI_CONTRATO_TRABALHO  ON FI_CONTRATO_TRABALHO.SQ_CONTRATO_TRABALHO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO INNER  JOIN FI_FUNDO_CONTRIBUICAO  ON FI_FUNDO_CONTRIBUICAO.SQ_TIPO_FUNDO=FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA<=:DT_REFERENCIA) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL) AND (FI_FUNDO_CONTRIBUICAO.IR_COLUNA=:IR_TIPO) AND (FI_CONTRATO_TRABALHO.CD_PESSOA=:CD_PESSOA)", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, CD_PESSOA, IR_TIPO });
			else
				throw new Exception("Provider não suportado!");
		}
		public virtual SaldoEntidade BuscarTaxaAdm(DateTime DT_REFERENCIA, int SQ_PLANO_PREVIDENCIAL, int SQ_CONTRATO_TRABALHO)
		{
			if(AppSettings.IS_SQL_SERVER_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO FROM   FI_FICHA_CONTRIB_PREVIDENCIAL WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA <= @DT_REFERENCIA)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO = 3)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO = @SQ_CONTRATO_TRABALHO)    AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL = @SQ_PLANO_PREVIDENCIAL)", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO });
			else if(AppSettings.IS_ORACLE_PROVIDER)
				return Conexao.QuerySingleOrDefault<SaldoEntidade>("SELECT SUM(FI_FICHA_CONTRIB_PREVIDENCIAL.QT_COTA_CONTRIBUICAO) AS QT_COTA_CONTRIBUICAO FROM FI_FICHA_CONTRIB_PREVIDENCIAL WHERE (FI_FICHA_CONTRIB_PREVIDENCIAL.DT_REFERENCIA<=:DT_REFERENCIA) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_TIPO_FUNDO=3) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_CONTRATO_TRABALHO=:SQ_CONTRATO_TRABALHO) AND (FI_FICHA_CONTRIB_PREVIDENCIAL.SQ_PLANO_PREVIDENCIAL=:SQ_PLANO_PREVIDENCIAL)", new { DT_REFERENCIA, SQ_PLANO_PREVIDENCIAL, SQ_CONTRATO_TRABALHO });
			else
				throw new Exception("Provider não suportado!");
		}
    }
}
